Resources:
  awsDynamoCrudDemotest3ServiceRole37803F1D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - lambda.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsDynamoCrudDemotest3/ServiceRole/Resource
  awsDynamoCrudDemotest3ServiceRoleDefaultPolicy56F8286E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - TableCD117FA1
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: awsDynamoCrudDemotest3ServiceRoleDefaultPolicy56F8286E
      Roles:
        - Ref: awsDynamoCrudDemotest3ServiceRole37803F1D
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsDynamoCrudDemotest3/ServiceRole/DefaultPolicy/Resource
  awsDynamoCrudDemotest38F32CC48:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: awsDynamoCrudDemotest3CodeS3Bucket65BDCF26
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: awsDynamoCrudDemotest3CodeS3VersionKey338DBF37
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: awsDynamoCrudDemotest3CodeS3VersionKey338DBF37
      Handler: main
      Role:
        Fn::GetAtt:
          - awsDynamoCrudDemotest3ServiceRole37803F1D
          - Arn
      Runtime: go1.x
      Environment:
        Variables:
          LAMBDA_ENV: test3
      FunctionName: manageCloudrackConfigtest3
    DependsOn:
      - awsDynamoCrudDemotest3ServiceRoleDefaultPolicy56F8286E
      - awsDynamoCrudDemotest3ServiceRole37803F1D
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsDynamoCrudDemotest3/Resource
      aws:asset:path: asset.404a4c157536b87f8ea261aae657ba0b1636b2889f7edd602eccb29c3e9781ec.zip
      aws:asset:property: Code
  awsDynamoCrudDemotest3ApiPermissionGETconfigA3FA206B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - awsDynamoCrudDemotest38F32CC48
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: awsCrudDemotest33D676BCF
            - /
            - Ref: awsCrudDemotest3DeploymentStageprodEE65860A
            - /GET/config
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsDynamoCrudDemotest3/ApiPermission.GET..config
  awsDynamoCrudDemotest3ApiPermissionTestGETconfigAADD822C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - awsDynamoCrudDemotest38F32CC48
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: awsCrudDemotest33D676BCF
            - /test-invoke-stage/GET/config
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsDynamoCrudDemotest3/ApiPermission.Test.GET..config
  awsDynamoCrudDemotest3ApiPermissionPOSTconfigE1CC1055:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - awsDynamoCrudDemotest38F32CC48
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: awsCrudDemotest33D676BCF
            - /
            - Ref: awsCrudDemotest3DeploymentStageprodEE65860A
            - /POST/config
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsDynamoCrudDemotest3/ApiPermission.POST..config
  awsDynamoCrudDemotest3ApiPermissionTestPOSTconfig698AB008:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - awsDynamoCrudDemotest38F32CC48
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: awsCrudDemotest33D676BCF
            - /test-invoke-stage/POST/config
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsDynamoCrudDemotest3/ApiPermission.Test.POST..config
  awsDynamoCrudDemotest3ApiPermissionGETconfigidAC92E9D1:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - awsDynamoCrudDemotest38F32CC48
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: awsCrudDemotest33D676BCF
            - /
            - Ref: awsCrudDemotest3DeploymentStageprodEE65860A
            - /GET/config/{id}
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsDynamoCrudDemotest3/ApiPermission.GET..config.{id}
  awsDynamoCrudDemotest3ApiPermissionTestGETconfigid9F17B731:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - awsDynamoCrudDemotest38F32CC48
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: awsCrudDemotest33D676BCF
            - /test-invoke-stage/GET/config/{id}
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsDynamoCrudDemotest3/ApiPermission.Test.GET..config.{id}
  awsDynamoCrudDemotest3ApiPermissionPOSTconfigidroomstype552DEFF4:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - awsDynamoCrudDemotest38F32CC48
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: awsCrudDemotest33D676BCF
            - /
            - Ref: awsCrudDemotest3DeploymentStageprodEE65860A
            - /POST/config/{id}/rooms/type
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsDynamoCrudDemotest3/ApiPermission.POST..config.{id}.rooms.type
  awsDynamoCrudDemotest3ApiPermissionTestPOSTconfigidroomstype29FEA92F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - awsDynamoCrudDemotest38F32CC48
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: awsCrudDemotest33D676BCF
            - /test-invoke-stage/POST/config/{id}/rooms/type
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsDynamoCrudDemotest3/ApiPermission.Test.POST..config.{id}.rooms.type
  awsDynamoCrudDemotest3ApiPermissionDELETEconfigidroomstypetypecode324E9804:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - awsDynamoCrudDemotest38F32CC48
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: awsCrudDemotest33D676BCF
            - /
            - Ref: awsCrudDemotest3DeploymentStageprodEE65860A
            - /DELETE/config/{id}/rooms/type/{typecode}
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsDynamoCrudDemotest3/ApiPermission.DELETE..config.{id}.rooms.type.{typecode}
  awsDynamoCrudDemotest3ApiPermissionTestDELETEconfigidroomstypetypecodeC512F2F2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - awsDynamoCrudDemotest38F32CC48
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: awsCrudDemotest33D676BCF
            - /test-invoke-stage/DELETE/config/{id}/rooms/type/{typecode}
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsDynamoCrudDemotest3/ApiPermission.Test.DELETE..config.{id}.rooms.type.{typecode}
  TableCD117FA1:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: code
          KeyType: HASH
        - AttributeName: itemType
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: code
          AttributeType: S
        - AttributeName: itemType
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: aws-crud-demo-config-test3
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/Table/Resource
  awsCrudDemotest33D676BCF:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: awsCrudDemotest3
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Resource
  awsCrudDemotest3Deployment244AB56C5e0c1b1020f233aab4655491ad99b2a2:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
      Description: Automatically created by the RestApi construct
    DependsOn:
      - awsCrudDemotest3configidGET1EA915B5
      - awsCrudDemotest3configidOPTIONSA102B5D8
      - awsCrudDemotest3configidFC889980
      - awsCrudDemotest3configidroomsOPTIONS23F88D3B
      - awsCrudDemotest3configidrooms6F8D085C
      - awsCrudDemotest3configidroomstypetypecodeDELETE69160411
      - awsCrudDemotest3configidroomstypetypecodeOPTIONSD67AAB27
      - awsCrudDemotest3configidroomstypetypecodeC0B719C8
      - awsCrudDemotest3configidroomstypeOPTIONS71EEC6EB
      - awsCrudDemotest3configidroomstypePOST00390234
      - awsCrudDemotest3configidroomstype7D351BE5
      - awsCrudDemotest3configGET42993285
      - awsCrudDemotest3configOPTIONS2ADF4538
      - awsCrudDemotest3configPOSTFD533DED
      - awsCrudDemotest3config36A7AE1B
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Deployment/Resource
  awsCrudDemotest3DeploymentStageprodEE65860A:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
      DeploymentId:
        Ref: awsCrudDemotest3Deployment244AB56C5e0c1b1020f233aab4655491ad99b2a2
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          ResourcePath: /*
      StageName: prod
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/DeploymentStage.prod/Resource
  awsCrudDemotest3CloudWatchRole371627BD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - apigateway.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/CloudWatchRole/Resource
  awsCrudDemotest3Account65E034CE:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - awsCrudDemotest3CloudWatchRole371627BD
          - Arn
    DependsOn:
      - awsCrudDemotest33D676BCF
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Account
  awsCrudDemotest3config36A7AE1B:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - awsCrudDemotest33D676BCF
          - RootResourceId
      PathPart: config
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Default/config/Resource
  awsCrudDemotest3configOPTIONS2ADF4538:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: awsCrudDemotest3config36A7AE1B
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'false'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE'"
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Default/config/OPTIONS/Resource
  awsCrudDemotest3configGET42993285:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: awsCrudDemotest3config36A7AE1B
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
        RequestTemplates:
          application/json: "{\"userInfo\":{\"sub\":\"$context.authorizer.claims.sub\",\"email\":\"$context.authorizer.claims.email\",\"username\":\"$context.authorizer.claims['cognito:username']\"},\"request\":$input.json('$'),\"subFunction\":\"listHotels\",\"id\":\"$input.params().path['id']\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - awsDynamoCrudDemotest38F32CC48
                  - Arn
              - /invocations
      MethodResponses:
        - StatusCode: "200"
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Default/config/GET/Resource
  awsCrudDemotest3configPOSTFD533DED:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: awsCrudDemotest3config36A7AE1B
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
        RequestTemplates:
          application/json: "{\"userInfo\":{\"sub\":\"$context.authorizer.claims.sub\",\"email\":\"$context.authorizer.claims.email\",\"username\":\"$context.authorizer.claims['cognito:username']\"},\"request\":$input.json('$'),\"subFunction\":\"saveHotel\",\"id\":\"$input.params().path['id']\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - awsDynamoCrudDemotest38F32CC48
                  - Arn
              - /invocations
      MethodResponses:
        - StatusCode: "200"
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Default/config/POST/Resource
  awsCrudDemotest3configidFC889980:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: awsCrudDemotest3config36A7AE1B
      PathPart: "{id}"
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Default/config/{id}/Resource
  awsCrudDemotest3configidGET1EA915B5:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: awsCrudDemotest3configidFC889980
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
        RequestTemplates:
          application/json: "{\"userInfo\":{\"sub\":\"$context.authorizer.claims.sub\",\"email\":\"$context.authorizer.claims.email\",\"username\":\"$context.authorizer.claims['cognito:username']\"},\"request\":$input.json('$'),\"subFunction\":\"getHotel\",\"id\":\"$input.params().path['id']\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - awsDynamoCrudDemotest38F32CC48
                  - Arn
              - /invocations
      MethodResponses:
        - StatusCode: "200"
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Default/config/{id}/GET/Resource
  awsCrudDemotest3configidOPTIONSA102B5D8:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: awsCrudDemotest3configidFC889980
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'false'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE'"
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Default/config/{id}/OPTIONS/Resource
  awsCrudDemotest3configidrooms6F8D085C:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: awsCrudDemotest3configidFC889980
      PathPart: rooms
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Default/config/{id}/rooms/Resource
  awsCrudDemotest3configidroomsOPTIONS23F88D3B:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: awsCrudDemotest3configidrooms6F8D085C
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'false'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE'"
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Default/config/{id}/rooms/OPTIONS/Resource
  awsCrudDemotest3configidroomstype7D351BE5:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: awsCrudDemotest3configidrooms6F8D085C
      PathPart: type
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Default/config/{id}/rooms/type/Resource
  awsCrudDemotest3configidroomstypeOPTIONS71EEC6EB:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: awsCrudDemotest3configidroomstype7D351BE5
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'false'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE'"
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Default/config/{id}/rooms/type/OPTIONS/Resource
  awsCrudDemotest3configidroomstypePOST00390234:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: awsCrudDemotest3configidroomstype7D351BE5
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
        RequestTemplates:
          application/json: "{\"userInfo\":{\"sub\":\"$context.authorizer.claims.sub\",\"email\":\"$context.authorizer.claims.email\",\"username\":\"$context.authorizer.claims['cognito:username']\"},\"request\":$input.json('$'),\"subFunction\":\"addRoomType\",\"id\":\"$input.params().path['id']\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - awsDynamoCrudDemotest38F32CC48
                  - Arn
              - /invocations
      MethodResponses:
        - StatusCode: "200"
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Default/config/{id}/rooms/type/POST/Resource
  awsCrudDemotest3configidroomstypetypecodeC0B719C8:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: awsCrudDemotest3configidroomstype7D351BE5
      PathPart: "{typecode}"
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Default/config/{id}/rooms/type/{typecode}/Resource
  awsCrudDemotest3configidroomstypetypecodeOPTIONSD67AAB27:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: awsCrudDemotest3configidroomstypetypecodeC0B719C8
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'false'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE'"
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Default/config/{id}/rooms/type/{typecode}/OPTIONS/Resource
  awsCrudDemotest3configidroomstypetypecodeDELETE69160411:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: DELETE
      ResourceId:
        Ref: awsCrudDemotest3configidroomstypetypecodeC0B719C8
      RestApiId:
        Ref: awsCrudDemotest33D676BCF
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
        RequestTemplates:
          application/json: "{\"userInfo\":{\"sub\":\"$context.authorizer.claims.sub\",\"email\":\"$context.authorizer.claims.email\",\"username\":\"$context.authorizer.claims['cognito:username']\"},\"request\":{\"code\":\"$input.params().path['id']\",\"tags\":[{\"code\":\"$input.params().path['tagId']\"}]},\"subFunction\":\"deleteRoomType\"}"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - awsDynamoCrudDemotest38F32CC48
                  - Arn
              - /invocations
      MethodResponses:
        - StatusCode: "200"
    Metadata:
      aws:cdk:path: CloudInfraDemoStacktest3/awsCrudDemotest3/Default/config/{id}/rooms/type/{typecode}/DELETE/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.3.0,@aws-cdk/assets=1.3.0,@aws-cdk/aws-apigateway=1.3.0,@aws-cdk/aws-applicationautoscaling=1.3.0,@aws-cdk/aws-autoscaling-common=1.3.0,@aws-cdk/aws-cloudwatch=1.3.0,@aws-cdk/aws-dynamodb=1.3.0,@aws-cdk/aws-ec2=1.3.0,@aws-cdk/aws-events=1.3.0,@aws-cdk/aws-iam=1.3.0,@aws-cdk/aws-kms=1.3.0,@aws-cdk/aws-lambda=1.3.0,@aws-cdk/aws-s3=1.3.0,@aws-cdk/aws-s3-assets=1.3.0,@aws-cdk/aws-sqs=1.3.0,@aws-cdk/aws-ssm=1.3.0,@aws-cdk/core=1.3.0,@aws-cdk/cx-api=1.3.0,@aws-cdk/region-info=1.3.0,jsii-runtime=node.js/v10.16.0
Parameters:
  awsDynamoCrudDemotest3CodeS3Bucket65BDCF26:
    Type: String
    Description: S3 bucket for asset "CloudInfraDemoStacktest3/awsDynamoCrudDemotest3/Code"
  awsDynamoCrudDemotest3CodeS3VersionKey338DBF37:
    Type: String
    Description: S3 key for asset version "CloudInfraDemoStacktest3/awsDynamoCrudDemotest3/Code"
  awsDynamoCrudDemotest3CodeArtifactHash05705B69:
    Type: String
    Description: Artifact hash for asset "CloudInfraDemoStacktest3/awsDynamoCrudDemotest3/Code"
Outputs:
  awsCrudDemotest3Endpoint4E5ABB83:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: awsCrudDemotest33D676BCF
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: awsCrudDemotest3DeploymentStageprodEE65860A
          - /

